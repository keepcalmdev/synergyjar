sudo: false
dist: trusty

language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - master

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  global:
    PATH="$TRAVIS_BUILD_DIR/vendor/bin:$PATH"

matrix:
  include:
    - php: 7.3
      env: WP_VERSION=master PHPCS=1
    - php: 7.3
      env: WP_VERSION=5.0
    - php: 7.2
      env: WP_VERSION=master
    - php: 7.2
      env: WP_VERSION=5.1
    - php: 7.2
      env: WP_VERSION=5.0
    - php: 7.2
      env: WP_VERSION=4.9
    - php: 7.2
      env: WP_VERSION=4.8
    - php: 7.2
      env: WP_VERSION=4.7
    - php: 7.1
      env: WP_VERSION=master
    - php: 7.0
      env: WP_VERSION=master
    - php: 5.6
      env: WP_VERSION=master
    - php: 5.6
      env: WP_VERSION=5.1
    - php: 5.6
      env: WP_VERSION=5.0
    - php: 5.6
      env: WP_VERSION=4.9
    - php: 5.6
      env: WP_VERSION=4.8
    - php: 5.6
      env: WP_VERSION=4.7

before_install:
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi

before_script:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:3} == "5.6" ]]; then
      composer require --dev phpunit/phpunit ^5;
      composer install
    else
      composer require --dev phpunit/phpunit ^6;
      composer install;
    fi

  # Install PHP CodeSniffer and WPCS.
  - |
    if [[ "$PHPCS" == "1" ]]; then
      composer require squizlabs/php_codesniffer
      composer require phpcompatibility/phpcompatibility-wp
      composer require wp-coding-standards/wpcs
      composer dealerdirect/phpcodesniffer-composer-installer
      composer install

      phpenv rehash

      ./vendor/bin/phpcs --config-set installed_paths '../../wimg/php-compatibility/,../../wp-coding-standards/wpcs/'
      ./vendor/bin/phpcs --config-set default_standard WordPress
    fi

install:
  # Set up WP + BP installation
  - export WP_DEVELOP_DIR=/tmp/wordpress/
  - export WP_TESTS_DIR=$WP_DEVELOP_DIR/tests/phpunit
  - mkdir -p $WP_DEVELOP_DIR
  - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ $WP_DEVELOP_DIR
  - plugin_slug=$(basename $(pwd))
  - plugin_dir=$WP_DEVELOP_DIR/src/wp-content/plugins/$plugin_slug
  - cd ..
  - mv $plugin_slug $plugin_dir
  - svn co --ignore-externals https://buddypress.svn.wordpress.org/trunk $WP_DEVELOP_DIR/src/wp-content/plugins/buddypress

  # set up tests config
  - cd $WP_DEVELOP_DIR
  - echo $WP_DEVELOP_DIR
  - cp wp-tests-config-sample.php wp-tests-config.php
  - sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
  - sed -i "s/yourusernamehere/root/" wp-tests-config.php
  - sed -i "s/yourpasswordhere//" wp-tests-config.php

  # set up database
  - mysql -e 'CREATE DATABASE wordpress_test;' -uroot

  - cd $plugin_dir

script:
  - ./vendor/bin/phpunit;
  - ./vendor/bin/phpunit -c tests/multisite.xml;
  - find includes -type "f" -iname "*.php" | xargs -L "1" php -l;
  - if [[ "$PHPCS" == "1" ]]; then ./vendor/bin/phpcs includes/*.php --standard=WordPress; fi
